<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<sect1 id="FindAtStrength">
  <title>FindAtStrength</title>

  <para><emphasis role="bold">STD.Uni.LocaleFindAtStrength<indexterm>
      <primary>STD.Uni.LocaleFindAtStrength</primary>
    </indexterm><indexterm>
      <primary>Uni.LocaleFindAtStrength</primary>
    </indexterm><indexterm>
      <primary>LocaleFindAtStrength</primary>
    </indexterm>(</emphasis>
  <emphasis>source,target,instance,locale,strength</emphasis> <emphasis
  role="bold">)</emphasis></para>

  <informaltable colsep="1" frame="all" rowsep="1">
    <tgroup cols="2">
      <colspec colwidth="80.50pt"/>

      <colspec/>

      <tbody>
        <row>
          <entry><emphasis>source</emphasis></entry>

          <entry>Uma string que contém os dados a serem pesquisados.</entry>
        </row>

        <row>
          <entry><emphasis>target </emphasis></entry>

          <entry>Uma string que contém a substring a ser pesquisada.</entry>
        </row>

        <row>
          <entry><emphasis>instance </emphasis></entry>

          <entry>Um inteiro que especifica qual ocorrência de
          <emphasis>target</emphasis> deve ser encontrada.</entry>
        </row>

        <row>
          <entry><emphasis>locale</emphasis></entry>

          <entry>Uma string terminada por nulo que contém o código de idioma e
          país a ser usado para determinar a ordem correta de classificação e
          outras operações.</entry>
        </row>

        <row>
          <entry><emphasis>strength</emphasis></entry>

          <entry>Um valor inteiro que indica como comparar. Os valores válidos
          são:</entry>
        </row>

        <row>
          <entry/>

          <entry>1 ignora acentos e maiúsculas/minúsculas e diferencia apenas
          as letras.</entry>
        </row>

        <row>
          <entry/>

          <entry>2 ignora maiúsculas/minúsculas mas diferencia os
          acentos.</entry>
        </row>

        <row>
          <entry/>

          <entry>3 diferencia entre acentos e maiúsculas/minúsculas, mas
          ignora diferenças entre Hiragana e Katakana, por exemplo.</entry>
        </row>

        <row>
          <entry/>

          <entry>4 diferencia entre acentos, maiúsculas/minúsculas e Hiragana
          e Katakana, por exemplo, mas ignora marcas de cantilena do hebreu,
          por exemplo.</entry>
        </row>

        <row>
          <entry/>

          <entry>5 diferencia entre todas as strings cujas formas decompostas
          canonicamente (NFD – Forma de normalização D) não são
          idênticas</entry>
        </row>

        <row>
          <entry>Return:<emphasis> </emphasis></entry>

          <entry>FindAtStrength retorna um valor INTEGER.</entry>
        </row>
      </tbody>
    </tgroup>
  </informaltable>

  <para>A função <emphasis role="bold">FindAtStrength </emphasis> retorna a
  posição inicial de índice dentro da string source da instance especificada
  da string target. <emphasis>source</emphasis> string da
  <emphasis>instância</emphasis> especificada da string de <emphasis>destino
  </emphasis>. Se <emphasis>target</emphasis> não for encontrado ou a
  <emphasis>instance</emphasis> especificada for maior que o número de
  ocorrências de <emphasis>target</emphasis> em <emphasis>source</emphasis>,
  StringFind retornará zero (0).</para>

  <para>Exemplo:</para>

  <programlisting format="linespecific">base := u'caf\u00E9';   // U+00E9 is lowercase e with acute
prim := u'coffee shop'; // 1st difference, different letters
seco := u'cafe';      // 2nd difference, accents (no acute)
tert := u'Caf\u00C9';   // 3rd, caps (U+00C9 is u/c E + acute)
search := seco + tert + base;
STD.Uni.LocaleFindAtStrength(search, base, 1, 'fr', 1) = 1;
 // at strength 1, base matches seco (only secondary diffs)
STD.Uni.LocaleFindAtStrength(search, base, 1, 'fr', 2) = 5;
 // at strength 2, base matches tert (only tertiary diffs)
STD.Uni.LocaleFindAtStrength(search, base, 1, 'fr', 3) = 9;
 // at strength 3, base doesn't match either seco or tert
STD.Uni.LocaleFindAtStrength(u'le caf\u00E9 vert',
         u'cafe', 1, 'fr', 2) = 4;
  // however, an accent on the source,
STD.Uni.LocaleFindAtStrength(u'le caf\u00E9 vert',
         u'cafe', 1, 'fr', 3) = 4;
 // rather than on the pattern,
STD.Uni.LocaleFindAtStrength(u'le caf\u00E9 vert',
         u'cafe', 1, 'fr', 4) = 4;
 // is ignored at strengths up to 4,
STD.Uni.LocaleFindAtStrength(u'le caf\u00E9 vert',
         u'cafe', 1, 'fr', 5) = 0;
 // and only counts at strength 5
</programlisting>
</sect1>
